service: blockies-generator

plugins:
  - "@silvermine/serverless-plugin-cloudfront-lambda-edge"
  - serverless-plugin-include-dependencies
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1

functions:
  blockiesGenerator:
    name: 'blockies-generator'
    handler: index.handler
    memorySize: 128
    timeout: 2
    lambdaAtEdge:
      distribution: 'BlockiesDistribtuion'
      eventType: 'origin-request'

resources:
  Resources:
    BlockiesOriginAccessIdentity:  # Only used for landing page assets
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: "CloudFrontOriginAccessIdentity for ${self:service}-${self:provider.stage}"
    BlockiesDistribtuion:
      Type: 'AWS::CloudFront::Distribution'
      Properties:
        DistributionConfig:
          Aliases:
            - ${env:BLOCKIES_DOMAIN}
          DefaultRootObject: "index.html"
          DefaultCacheBehavior:
            TargetOriginId: 'BlockiesOrigin'
            ViewerProtocolPolicy: 'redirect-to-https'
            DefaultTTL: 31536000 # one year, default MaxTTL
            Compress: true
            ForwardedValues:
              QueryString: true
              QueryStringCacheKeys:
                - size
              Cookies:
                Forward: 'none'
          Enabled: true
          PriceClass: 'PriceClass_200'
          HttpVersion: 'http2'
          ViewerCertificate:
            AcmCertificateArn: ${env:ACM_CERTIFICATE_ARN}
            SslSupportMethod: 'sni-only'
            MinimumProtocolVersion: 'TLSv1.1_2016'
          Origins:
            - Id: 'BlockiesOrigin'
              DomainName: 'blockies.shipchain.io.s3.amazonaws.com'  # Only used for landing page assets
              S3OriginConfig:
                OriginAccessIdentity: { "Fn::Join" : ["", ["origin-access-identity/cloudfront/", { Ref: BlockiesOriginAccessIdentity } ] ]  }

package:
  exclude:
    - "web"